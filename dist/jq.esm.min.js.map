{"version":3,"file":"jq.esm.min.js","sources":["../es/utils.js","../es/functions/each.js","../es/JQ.js","../es/$.js","../es/functions/contains.js","../es/functions/merge.js","../es/methods/each.js","../es/methods/get.js","../es/methods/find.js","../es/methods/utils/event.js","../es/functions/extend.js","../es/functions/param.js","../es/methods/trigger.js","../es/functions/utils/ajax.js","../es/functions/ajax.js","../es/static/ajax.js","../es/static/ajaxSetup.js","../es/functions/ajaxSetup.js","../es/static/contains.js","../es/functions/utils/data.js","../es/functions/data.js","../es/functions/map.js","../es/functions/removeData.js","../es/functions/unique.js","../es/methods/utils/dir.js","../es/static/data.js","../es/static/each.js","../es/static/extend.js","../es/static/map.js","../es/static/merge.js","../es/static/param.js","../es/static/removeData.js","../es/static/unique.js","../es/methods/add.js","../es/methods/addClass.js","../es/methods/insertBefore.js","../es/methods/before.js","../es/methods/off.js","../es/methods/on.js","../es/methods/ajaxStart.js","../es/methods/map.js","../es/methods/clone.js","../es/methods/is.js","../es/methods/remove.js","../es/methods/append.js","../es/methods/appendTo.js","../es/methods/attr.js","../es/methods/children.js","../es/methods/slice.js","../es/methods/eq.js","../es/methods/parent.js","../es/methods/closest.js","../es/methods/data.js","../es/methods/width.js","../es/methods/position.js","../es/methods/offset.js","../es/methods/empty.js","../es/methods/extend.js","../es/methods/filter.js","../es/methods/first.js","../es/methods/has.js","../es/methods/hasClass.js","../es/methods/hide.js","../es/methods/val.js","../es/methods/index.js","../es/methods/last.js","../es/methods/next.js","../es/methods/not.js","../es/methods/offsetParent.js","../es/methods/one.js","../es/methods/prev.js","../es/methods/removeAttr.js","../es/methods/removeData.js","../es/methods/removeProp.js","../es/methods/replaceWith.js","../es/methods/replaceAll.js","../es/methods/serializeArray.js","../es/methods/serialize.js","../es/methods/show.js","../es/methods/siblings.js","../es/methods/toggle.js"],"sourcesContent":["function isNodeName(element, name) {\r\n    return element.nodeName.toLowerCase() === name.toLowerCase();\r\n}\r\nfunction isFunction(target) {\r\n    return typeof target === 'function';\r\n}\r\nfunction isString(target) {\r\n    return typeof target === 'string';\r\n}\r\nfunction isNumber(target) {\r\n    return typeof target === 'number';\r\n}\r\nfunction isBoolean(target) {\r\n    return typeof target === 'boolean';\r\n}\r\nfunction isUndefined(target) {\r\n    return typeof target === 'undefined';\r\n}\r\nfunction isNull(target) {\r\n    return target === null;\r\n}\r\nfunction isWindow(target) {\r\n    return target instanceof Window;\r\n}\r\nfunction isDocument(target) {\r\n    return target instanceof Document;\r\n}\r\nfunction isElement(target) {\r\n    return target instanceof Element;\r\n}\r\nfunction isNode(target) {\r\n    return target instanceof Node;\r\n}\r\n/**\r\n * 是否是 IE 浏览器\r\n */\r\nfunction isIE() {\r\n    // @ts-ignore\r\n    return !!window.document.documentMode;\r\n}\r\nfunction isArrayLike(target) {\r\n    if (isFunction(target) || isWindow(target)) {\r\n        return false;\r\n    }\r\n    return isNumber(target.length);\r\n}\r\nfunction isObjectLike(target) {\r\n    return typeof target === 'object' && target !== null;\r\n}\r\nfunction toElement(target) {\r\n    return isDocument(target) ? target.documentElement : target;\r\n}\r\n/**\r\n * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）\r\n * @param string\r\n */\r\nfunction toCamelCase(string) {\r\n    return string\r\n        .replace(/^-ms-/, 'ms-')\r\n        .replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\r\n}\r\n/**\r\n * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）\r\n * @param string\r\n */\r\nfunction toKebabCase(string) {\r\n    return string.replace(/[A-Z]/g, (replacer) => '-' + replacer.toLowerCase());\r\n}\r\n/**\r\n * 获取元素的样式值\r\n * @param element\r\n * @param name\r\n */\r\nfunction getComputedStyleValue(element, name) {\r\n    return window.getComputedStyle(element).getPropertyValue(toKebabCase(name));\r\n}\r\n/**\r\n * 检查元素的 box-sizing 是否是 border-box\r\n * @param element\r\n */\r\nfunction isBorderBox(element) {\r\n    return getComputedStyleValue(element, 'box-sizing') === 'border-box';\r\n}\r\n/**\r\n * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）\r\n * @param element\r\n * @param direction\r\n * @param extra\r\n */\r\nfunction getExtraWidth(element, direction, extra) {\r\n    const position = direction === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\r\n    return [0, 1].reduce((prev, _, index) => {\r\n        let prop = extra + position[index];\r\n        if (extra === 'border') {\r\n            prop += 'Width';\r\n        }\r\n        return prev + parseFloat(getComputedStyleValue(element, prop) || '0');\r\n    }, 0);\r\n}\r\n/**\r\n * 获取元素的样式值，对 width 和 height 进行过处理\r\n * @param element\r\n * @param name\r\n */\r\nfunction getStyle(element, name) {\r\n    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取\r\n    if (name === 'width' || name === 'height') {\r\n        const valueNumber = element.getBoundingClientRect()[name];\r\n        if (isBorderBox(element)) {\r\n            return `${valueNumber}px`;\r\n        }\r\n        return `${valueNumber -\r\n            getExtraWidth(element, name, 'border') -\r\n            getExtraWidth(element, name, 'padding')}px`;\r\n    }\r\n    return getComputedStyleValue(element, name);\r\n}\r\n/**\r\n * 获取子节点组成的数组\r\n * @param target\r\n * @param parent\r\n */\r\nfunction getChildNodesArray(target, parent) {\r\n    const tempParent = document.createElement(parent);\r\n    tempParent.innerHTML = target;\r\n    return [].slice.call(tempParent.childNodes);\r\n}\r\n/**\r\n * 始终返回 false 的函数\r\n */\r\nfunction returnFalse() {\r\n    return false;\r\n}\r\n/**\r\n * 数值单位的 CSS 属性\r\n */\r\nconst cssNumber = [\r\n    'animationIterationCount',\r\n    'columnCount',\r\n    'fillOpacity',\r\n    'flexGrow',\r\n    'flexShrink',\r\n    'fontWeight',\r\n    'gridArea',\r\n    'gridColumn',\r\n    'gridColumnEnd',\r\n    'gridColumnStart',\r\n    'gridRow',\r\n    'gridRowEnd',\r\n    'gridRowStart',\r\n    'lineHeight',\r\n    'opacity',\r\n    'order',\r\n    'orphans',\r\n    'widows',\r\n    'zIndex',\r\n    'zoom',\r\n];\r\nexport { isNodeName, isArrayLike, isObjectLike, isFunction, isString, isNumber, isBoolean, isUndefined, isNull, isWindow, isDocument, isElement, isNode, isIE, toElement, toCamelCase, toKebabCase, getComputedStyleValue, isBorderBox, getExtraWidth, getStyle, getChildNodesArray, returnFalse, cssNumber, };\r\n","import { isArrayLike } from '../utils';\r\nfunction each(target, callback) {\r\n    if (isArrayLike(target)) {\r\n        for (let i = 0; i < target.length; i += 1) {\r\n            if (callback.call(target[i], i, target[i]) === false) {\r\n                return target;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const keys = Object.keys(target);\r\n        for (let i = 0; i < keys.length; i += 1) {\r\n            if (callback.call(target[keys[i]], keys[i], target[keys[i]]) === false) {\r\n                return target;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport default each;\r\n","import each from './functions/each';\r\n/**\r\n * 为了使用模块扩充，这里不能使用默认导出\r\n */\r\nexport class JQ {\r\n    constructor(arr) {\r\n        this.length = 0;\r\n        if (!arr) {\r\n            return this;\r\n        }\r\n        each(arr, (i, item) => {\r\n            // @ts-ignore\r\n            this[i] = item;\r\n        });\r\n        this.length = arr.length;\r\n        return this;\r\n    }\r\n}\r\n","import each from './functions/each';\r\nimport { JQ } from './JQ';\r\nimport { getChildNodesArray, isArrayLike, isFunction, isNode, isString, } from './utils';\r\nfunction get$() {\r\n    const $ = function (selector) {\r\n        if (!selector) {\r\n            return new JQ();\r\n        }\r\n        // JQ\r\n        if (selector instanceof JQ) {\r\n            return selector;\r\n        }\r\n        // function\r\n        if (isFunction(selector)) {\r\n            if (/complete|loaded|interactive/.test(document.readyState) &&\r\n                document.body) {\r\n                selector.call(document, $);\r\n            }\r\n            else {\r\n                document.addEventListener('DOMContentLoaded', () => selector.call(document, $), false);\r\n            }\r\n            return new JQ([document]);\r\n        }\r\n        // String\r\n        if (isString(selector)) {\r\n            const html = selector.trim();\r\n            // 根据 HTML 字符串创建 JQ 对象\r\n            if (html[0] === '<' && html[html.length - 1] === '>') {\r\n                let toCreate = 'div';\r\n                const tags = {\r\n                    li: 'ul',\r\n                    tr: 'tbody',\r\n                    td: 'tr',\r\n                    th: 'tr',\r\n                    tbody: 'table',\r\n                    option: 'select',\r\n                };\r\n                each(tags, (childTag, parentTag) => {\r\n                    if (html.indexOf(`<${childTag}`) === 0) {\r\n                        toCreate = parentTag;\r\n                        return false;\r\n                    }\r\n                    return;\r\n                });\r\n                return new JQ(getChildNodesArray(html, toCreate));\r\n            }\r\n            // 根据 CSS 选择器创建 JQ 对象\r\n            const isIdSelector = selector[0] === '#' && !selector.match(/[ .<>:~]/);\r\n            if (!isIdSelector) {\r\n                return new JQ(document.querySelectorAll(selector));\r\n            }\r\n            const element = document.getElementById(selector.slice(1));\r\n            if (element) {\r\n                return new JQ([element]);\r\n            }\r\n            return new JQ();\r\n        }\r\n        if (isArrayLike(selector) && !isNode(selector)) {\r\n            return new JQ(selector);\r\n        }\r\n        return new JQ([selector]);\r\n    };\r\n    $.fn = JQ.prototype;\r\n    return $;\r\n}\r\nconst $ = get$();\r\nexport default $;\r\n","import { toElement } from '../utils';\r\n/**\r\n * 检查 container 元素内是否包含 contains 元素\r\n * @param container 父元素\r\n * @param contains 子元素\r\n * @example\r\n```js\r\ncontains( document, document.body ); // true\r\ncontains( document.getElementById('test'), document ); // false\r\ncontains( $('.container').get(0), $('.contains').get(0) ); // false\r\n```\r\n */\r\nfunction contains(container, contains) {\r\n    return container !== contains && toElement(container).contains(contains);\r\n}\r\nexport default contains;\r\n","import each from './each';\r\n/**\r\n * 把第二个数组的元素追加到第一个数组中，并返回合并后的数组\r\n * @param first 第一个数组\r\n * @param second 该数组的元素将被追加到第一个数组中\r\n * @example\r\n```js\r\nmerge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\r\n// [ 0, 1, 2, 2, 3, 4 ]\r\n```\r\n */\r\nfunction merge(first, second) {\r\n    each(second, (_, value) => {\r\n        first.push(value);\r\n    });\r\n    return first;\r\n}\r\nexport default merge;\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\n$.fn.each = function (callback) {\r\n    return each(this, callback);\r\n};\r\n","import $ from '../$';\r\n$.fn.get = function (index) {\r\n    return index === undefined\r\n        ? [].slice.call(this)\r\n        : this[index >= 0 ? index : index + this.length];\r\n};\r\n","import $ from '../$';\r\nimport merge from '../functions/merge';\r\nimport { JQ } from '../JQ';\r\nimport './each';\r\nimport './get';\r\n$.fn.find = function (selector) {\r\n    const foundElements = [];\r\n    this.each((_, element) => {\r\n        merge(foundElements, $(element.querySelectorAll(selector)).get());\r\n    });\r\n    return new JQ(foundElements);\r\n};\r\n","import $ from '../../$';\r\nimport contains from '../../functions/contains';\r\nimport { isObjectLike } from '../../utils';\r\nimport '../find';\r\n// 存储事件\r\nconst handlers = {};\r\n// 元素ID\r\nlet mduiElementId = 1;\r\n/**\r\n * 为元素赋予一个唯一的ID\r\n */\r\nfunction getElementId(element) {\r\n    const key = '_mduiEventId';\r\n    // @ts-ignore\r\n    if (!element[key]) {\r\n        // @ts-ignore\r\n        element[key] = ++mduiElementId;\r\n    }\r\n    // @ts-ignore\r\n    return element[key];\r\n}\r\n/**\r\n * 解析事件名中的命名空间\r\n */\r\nfunction parse(type) {\r\n    const parts = type.split('.');\r\n    return {\r\n        type: parts[0],\r\n        ns: parts.slice(1).sort().join(' '),\r\n    };\r\n}\r\n/**\r\n * 命名空间匹配规则\r\n */\r\nfunction matcherFor(ns) {\r\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');\r\n}\r\n/**\r\n * 获取匹配的事件\r\n * @param element\r\n * @param type\r\n * @param func\r\n * @param selector\r\n */\r\nfunction getHandlers(element, type, func, selector) {\r\n    const event = parse(type);\r\n    return (handlers[getElementId(element)] || []).filter((handler) => handler &&\r\n        (!event.type || handler.type === event.type) &&\r\n        (!event.ns || matcherFor(event.ns).test(handler.ns)) &&\r\n        (!func || getElementId(handler.func) === getElementId(func)) &&\r\n        (!selector || handler.selector === selector));\r\n}\r\n/**\r\n * 添加事件监听\r\n * @param element\r\n * @param types\r\n * @param func\r\n * @param data\r\n * @param selector\r\n */\r\nfunction add(element, types, func, data, selector) {\r\n    const elementId = getElementId(element);\r\n    if (!handlers[elementId]) {\r\n        handlers[elementId] = [];\r\n    }\r\n    // 传入 data.useCapture 来设置 useCapture: true\r\n    let useCapture = false;\r\n    if (isObjectLike(data) && data.useCapture) {\r\n        useCapture = true;\r\n    }\r\n    types.split(' ').forEach((type) => {\r\n        if (!type) {\r\n            return;\r\n        }\r\n        const event = parse(type);\r\n        function callFn(e, elem) {\r\n            // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\r\n            const result = func.apply(elem, \r\n            // @ts-ignore\r\n            e._detail === undefined ? [e] : [e].concat(e._detail));\r\n            if (result === false) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n        function proxyFn(e) {\r\n            // @ts-ignore\r\n            if (e._ns && !matcherFor(e._ns).test(event.ns)) {\r\n                return;\r\n            }\r\n            // @ts-ignore\r\n            e._data = data;\r\n            if (selector) {\r\n                // 事件代理\r\n                $(element)\r\n                    .find(selector)\r\n                    .get()\r\n                    .reverse()\r\n                    .forEach((elem) => {\r\n                    if (elem === e.target ||\r\n                        contains(elem, e.target)) {\r\n                        callFn(e, elem);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                // 不使用事件代理\r\n                callFn(e, element);\r\n            }\r\n        }\r\n        const handler = {\r\n            type: event.type,\r\n            ns: event.ns,\r\n            func,\r\n            selector,\r\n            id: handlers[elementId].length,\r\n            proxy: proxyFn,\r\n        };\r\n        handlers[elementId].push(handler);\r\n        element.addEventListener(handler.type, proxyFn, useCapture);\r\n    });\r\n}\r\n/**\r\n * 移除事件监听\r\n * @param element\r\n * @param types\r\n * @param func\r\n * @param selector\r\n */\r\nfunction remove(element, types, func, selector) {\r\n    const handlersInElement = handlers[getElementId(element)] || [];\r\n    const removeEvent = (handler) => {\r\n        delete handlersInElement[handler.id];\r\n        element.removeEventListener(handler.type, handler.proxy, false);\r\n    };\r\n    if (!types) {\r\n        handlersInElement.forEach((handler) => removeEvent(handler));\r\n    }\r\n    else {\r\n        types.split(' ').forEach((type) => {\r\n            if (type) {\r\n                getHandlers(element, type, func, selector).forEach((handler) => removeEvent(handler));\r\n            }\r\n        });\r\n    }\r\n}\r\nexport { parse, add, remove };\r\n","import each from '../functions/each';\r\nimport { isUndefined } from '../utils';\r\nfunction extend(target, object1, ...objectN) {\r\n    objectN.unshift(object1);\r\n    each(objectN, (_, object) => {\r\n        each(object, (prop, value) => {\r\n            if (!isUndefined(value)) {\r\n                target[prop] = value;\r\n            }\r\n        });\r\n    });\r\n    return target;\r\n}\r\nexport default extend;\r\n","import { isObjectLike } from '../utils';\r\nimport each from './each';\r\n/**\r\n * 将数组或对象序列化，序列化后的字符串可作为 URL 查询字符串使用\r\n *\r\n * 若传入数组，则格式必须和 serializeArray 方法的返回值一样\r\n * @param obj 对象或数组\r\n * @example\r\n```js\r\nparam({ width: 1680, height: 1050 });\r\n// width=1680&height=1050\r\n```\r\n * @example\r\n```js\r\nparam({ foo: { one: 1, two: 2 }})\r\n// foo[one]=1&foo[two]=2\r\n```\r\n * @example\r\n```js\r\nparam({ids: [1, 2, 3]})\r\n// ids[]=1&ids[]=2&ids[]=3\r\n```\r\n * @example\r\n```js\r\nparam([\r\n  {\"name\":\"name\",\"value\":\"mdui\"},\r\n  {\"name\":\"password\",\"value\":\"123456\"}\r\n])\r\n// name=mdui&password=123456\r\n```\r\n */\r\nfunction param(obj) {\r\n    if (!isObjectLike(obj) && !Array.isArray(obj)) {\r\n        return '';\r\n    }\r\n    const args = [];\r\n    function destructure(key, value) {\r\n        let keyTmp;\r\n        if (isObjectLike(value)) {\r\n            each(value, (i, v) => {\r\n                if (Array.isArray(value) && !isObjectLike(v)) {\r\n                    keyTmp = '';\r\n                }\r\n                else {\r\n                    keyTmp = i;\r\n                }\r\n                destructure(`${key}[${keyTmp}]`, v);\r\n            });\r\n        }\r\n        else {\r\n            if (value == null || value === '') {\r\n                keyTmp = '=';\r\n            }\r\n            else {\r\n                keyTmp = `=${encodeURIComponent(value)}`;\r\n            }\r\n            args.push(encodeURIComponent(key) + keyTmp);\r\n        }\r\n    }\r\n    if (Array.isArray(obj)) {\r\n        each(obj, function () {\r\n            destructure(this.name, this.value);\r\n        });\r\n    }\r\n    else {\r\n        each(obj, destructure);\r\n    }\r\n    return args.join('&');\r\n}\r\nexport default param;\r\n","import $ from '../$';\r\nimport './each';\r\nimport { parse } from './utils/event';\r\n$.fn.trigger = function (type, extraParameters) {\r\n    const event = parse(type);\r\n    let eventObject;\r\n    const eventParams = {\r\n        bubbles: true,\r\n        cancelable: true,\r\n    };\r\n    const isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(event.type) > -1;\r\n    if (isMouseEvent) {\r\n        // Note: MouseEvent 无法传入 detail 参数\r\n        eventObject = new MouseEvent(event.type, eventParams);\r\n    }\r\n    else {\r\n        eventParams.detail = extraParameters;\r\n        eventObject = new CustomEvent(event.type, eventParams);\r\n    }\r\n    // @ts-ignore\r\n    eventObject._detail = extraParameters;\r\n    // @ts-ignore\r\n    eventObject._ns = event.ns;\r\n    return this.each(function () {\r\n        this.dispatchEvent(eventObject);\r\n    });\r\n};\r\n","// 全局配置参数\r\nconst globalOptions = {};\r\n// 全局事件名\r\nconst ajaxEvents = {\r\n    ajaxStart: 'start.mdui.ajax',\r\n    ajaxSuccess: 'success.mdui.ajax',\r\n    ajaxError: 'error.mdui.ajax',\r\n    ajaxComplete: 'complete.mdui.ajax',\r\n};\r\nexport { globalOptions, ajaxEvents };\r\n","import $ from '../$';\r\nimport '../methods/trigger';\r\nimport { isString, isUndefined } from '../utils';\r\nimport each from './each';\r\nimport extend from './extend';\r\nimport param from './param';\r\nimport { ajaxEvents, globalOptions } from './utils/ajax';\r\n/**\r\n * 判断此请求方法是否通过查询字符串提交参数\r\n * @param method 请求方法，大写\r\n */\r\nfunction isQueryStringData(method) {\r\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\r\n}\r\n/**\r\n * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\r\n * @param url\r\n * @param query\r\n */\r\nfunction appendQuery(url, query) {\r\n    return `${url}&${query}`.replace(/[&?]{1,2}/, '?');\r\n}\r\n/**\r\n * 合并请求参数，参数优先级：options > globalOptions > defaults\r\n * @param options\r\n */\r\nfunction mergeOptions(options) {\r\n    // 默认参数\r\n    const defaults = {\r\n        url: '',\r\n        method: 'GET',\r\n        data: '',\r\n        processData: true,\r\n        async: true,\r\n        cache: true,\r\n        username: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n        global: true,\r\n    };\r\n    // globalOptions 中的回调函数不合并\r\n    each(globalOptions, (key, value) => {\r\n        const callbacks = [\r\n            'beforeSend',\r\n            'success',\r\n            'error',\r\n            'complete',\r\n            'statusCode',\r\n        ];\r\n        // @ts-ignore\r\n        if (callbacks.indexOf(key) < 0 && !isUndefined(value)) {\r\n            defaults[key] = value;\r\n        }\r\n    });\r\n    return extend({}, defaults, options);\r\n}\r\n/**\r\n * 发送 ajax 请求\r\n * @param options\r\n * @example\r\n```js\r\najax({\r\n  method: \"POST\",\r\n  url: \"some.php\",\r\n  data: { name: \"John\", location: \"Boston\" }\r\n}).then(function( msg ) {\r\n  alert( \"Data Saved: \" + msg );\r\n});\r\n```\r\n */\r\nfunction ajax(options) {\r\n    // 是否已取消请求\r\n    let isCanceled = false;\r\n    // 事件参数\r\n    const eventParams = {};\r\n    // 参数合并\r\n    const mergedOptions = mergeOptions(options);\r\n    let url = mergedOptions.url || window.location.toString();\r\n    const method = mergedOptions.method.toUpperCase();\r\n    let data = mergedOptions.data;\r\n    const processData = mergedOptions.processData;\r\n    const async = mergedOptions.async;\r\n    const cache = mergedOptions.cache;\r\n    const username = mergedOptions.username;\r\n    const password = mergedOptions.password;\r\n    const headers = mergedOptions.headers;\r\n    const xhrFields = mergedOptions.xhrFields;\r\n    const statusCode = mergedOptions.statusCode;\r\n    const dataType = mergedOptions.dataType;\r\n    const contentType = mergedOptions.contentType;\r\n    const timeout = mergedOptions.timeout;\r\n    const global = mergedOptions.global;\r\n    // 需要发送的数据\r\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\r\n    if (data &&\r\n        (isQueryStringData(method) || processData) &&\r\n        !isString(data) &&\r\n        !(data instanceof ArrayBuffer) &&\r\n        !(data instanceof Blob) &&\r\n        !(data instanceof Document) &&\r\n        !(data instanceof FormData)) {\r\n        data = param(data);\r\n    }\r\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\r\n    if (data && isQueryStringData(method)) {\r\n        // 查询字符串拼接到 URL 中\r\n        url = appendQuery(url, data);\r\n        data = null;\r\n    }\r\n    /**\r\n     * 触发事件和回调函数\r\n     * @param event\r\n     * @param params\r\n     * @param callback\r\n     * @param args\r\n     */\r\n    function trigger(event, params, callback, ...args) {\r\n        // 触发全局事件\r\n        if (global) {\r\n            $(document).trigger(event, params);\r\n        }\r\n        // 触发 ajax 回调和事件\r\n        let result1;\r\n        let result2;\r\n        if (callback) {\r\n            // 全局回调\r\n            if (callback in globalOptions) {\r\n                // @ts-ignore\r\n                result1 = globalOptions[callback](...args);\r\n            }\r\n            // 自定义回调\r\n            if (mergedOptions[callback]) {\r\n                // @ts-ignore\r\n                result2 = mergedOptions[callback](...args);\r\n            }\r\n            // beforeSend 回调返回 false 时取消 ajax 请求\r\n            if (callback === 'beforeSend' &&\r\n                (result1 === false || result2 === false)) {\r\n                isCanceled = true;\r\n            }\r\n        }\r\n    }\r\n    // XMLHttpRequest 请求\r\n    function XHR() {\r\n        let textStatus;\r\n        return new Promise((resolve, reject) => {\r\n            // GET/HEAD 请求的缓存处理\r\n            if (isQueryStringData(method) && !cache) {\r\n                url = appendQuery(url, `_=${Date.now()}`);\r\n            }\r\n            // 创建 XHR\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, async, username, password);\r\n            if (contentType ||\r\n                (data && !isQueryStringData(method) && contentType !== false)) {\r\n                xhr.setRequestHeader('Content-Type', contentType);\r\n            }\r\n            // 设置 Accept\r\n            if (dataType === 'json') {\r\n                xhr.setRequestHeader('Accept', 'application/json, text/javascript');\r\n            }\r\n            // 添加 headers\r\n            if (headers) {\r\n                each(headers, (key, value) => {\r\n                    // undefined 值不发送，string 和 null 需要发送\r\n                    if (!isUndefined(value)) {\r\n                        xhr.setRequestHeader(key, value + ''); // 把 null 转换成字符串\r\n                    }\r\n                });\r\n            }\r\n            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With\r\n            const crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(url) &&\r\n                RegExp.$2 !== window.location.host;\r\n            if (!crossDomain) {\r\n                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n            }\r\n            if (xhrFields) {\r\n                each(xhrFields, (key, value) => {\r\n                    // @ts-ignore\r\n                    xhr[key] = value;\r\n                });\r\n            }\r\n            eventParams.xhr = xhr;\r\n            eventParams.options = mergedOptions;\r\n            let xhrTimeout;\r\n            xhr.onload = function () {\r\n                if (xhrTimeout) {\r\n                    clearTimeout(xhrTimeout);\r\n                }\r\n                // AJAX 返回的 HTTP 响应码是否表示成功\r\n                const isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) ||\r\n                    xhr.status === 304 ||\r\n                    xhr.status === 0;\r\n                let responseData;\r\n                if (isHttpStatusSuccess) {\r\n                    if (xhr.status === 204 || method === 'HEAD') {\r\n                        textStatus = 'nocontent';\r\n                    }\r\n                    else if (xhr.status === 304) {\r\n                        textStatus = 'notmodified';\r\n                    }\r\n                    else {\r\n                        textStatus = 'success';\r\n                    }\r\n                    if (dataType === 'json') {\r\n                        try {\r\n                            responseData =\r\n                                method === 'HEAD' ? undefined : JSON.parse(xhr.responseText);\r\n                            eventParams.data = responseData;\r\n                        }\r\n                        catch (err) {\r\n                            textStatus = 'parsererror';\r\n                            trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\r\n                            reject(new Error(textStatus));\r\n                        }\r\n                        if (textStatus !== 'parsererror') {\r\n                            trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\r\n                            resolve(responseData);\r\n                        }\r\n                    }\r\n                    else {\r\n                        responseData =\r\n                            method === 'HEAD'\r\n                                ? undefined\r\n                                : xhr.responseType === 'text' || xhr.responseType === ''\r\n                                    ? xhr.responseText\r\n                                    : xhr.response;\r\n                        eventParams.data = responseData;\r\n                        trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\r\n                        resolve(responseData);\r\n                    }\r\n                }\r\n                else {\r\n                    textStatus = 'error';\r\n                    trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\r\n                    reject(new Error(textStatus));\r\n                }\r\n                // statusCode\r\n                each([globalOptions.statusCode, statusCode], (_, func) => {\r\n                    if (func && func[xhr.status]) {\r\n                        if (isHttpStatusSuccess) {\r\n                            func[xhr.status](responseData, textStatus, xhr);\r\n                        }\r\n                        else {\r\n                            func[xhr.status](xhr, textStatus);\r\n                        }\r\n                    }\r\n                });\r\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, textStatus);\r\n            };\r\n            xhr.onerror = function () {\r\n                if (xhrTimeout) {\r\n                    clearTimeout(xhrTimeout);\r\n                }\r\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, xhr.statusText);\r\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, 'error');\r\n                reject(new Error(xhr.statusText));\r\n            };\r\n            xhr.onabort = function () {\r\n                let statusText = 'abort';\r\n                if (xhrTimeout) {\r\n                    statusText = 'timeout';\r\n                    clearTimeout(xhrTimeout);\r\n                }\r\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, statusText);\r\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, statusText);\r\n                reject(new Error(statusText));\r\n            };\r\n            // ajax start 回调\r\n            trigger(ajaxEvents.ajaxStart, eventParams, 'beforeSend', xhr);\r\n            if (isCanceled) {\r\n                reject(new Error('cancel'));\r\n                return;\r\n            }\r\n            // Timeout\r\n            if (timeout > 0) {\r\n                xhrTimeout = setTimeout(() => {\r\n                    xhr.abort();\r\n                }, timeout);\r\n            }\r\n            // 发送 XHR\r\n            xhr.send(data);\r\n        });\r\n    }\r\n    return XHR();\r\n}\r\nexport default ajax;\r\n","import $ from '../$';\r\nimport ajax from '../functions/ajax';\r\n$.ajax = ajax;\r\n","import $ from '../$';\r\nimport ajaxSetup from '../functions/ajaxSetup';\r\n$.ajaxSetup = ajaxSetup;\r\n","import extend from '../functions/extend';\r\nimport { globalOptions } from './utils/ajax';\r\n/**\r\n * 为 Ajax 请求设置全局配置参数\r\n * @param options 键值对参数\r\n * @example\r\n```js\r\najaxSetup({\r\n  dataType: 'json',\r\n  method: 'POST',\r\n});\r\n```\r\n */\r\nfunction ajaxSetup(options) {\r\n    return extend(globalOptions, options);\r\n}\r\nexport default ajaxSetup;\r\n","import $ from '../$';\r\nimport contains from '../functions/contains';\r\n$.contains = contains;\r\n","const dataNS = '_mduiElementDataStorage';\r\nexport default dataNS;\r\n","import { isObjectLike, isUndefined, toCamelCase } from '../utils';\r\nimport each from './each';\r\nimport dataNS from './utils/data';\r\n/**\r\n * 在元素上设置键值对数据\r\n * @param element\r\n * @param object\r\n */\r\nfunction setObjectToElement(element, object) {\r\n    // @ts-ignore\r\n    if (!element[dataNS]) {\r\n        // @ts-ignore\r\n        element[dataNS] = {};\r\n    }\r\n    each(object, (key, value) => {\r\n        // @ts-ignore\r\n        element[dataNS][toCamelCase(key)] = value;\r\n    });\r\n}\r\nfunction data(element, key, value) {\r\n    // 根据键值对设置值\r\n    // data(element, { 'key' : 'value' })\r\n    if (isObjectLike(key)) {\r\n        setObjectToElement(element, key);\r\n        return key;\r\n    }\r\n    // 根据 key、value 设置值\r\n    // data(element, 'key', 'value')\r\n    if (!isUndefined(value)) {\r\n        setObjectToElement(element, { [key]: value });\r\n        return value;\r\n    }\r\n    // 获取所有值\r\n    // data(element)\r\n    if (isUndefined(key)) {\r\n        // @ts-ignore\r\n        return element[dataNS] ? element[dataNS] : {};\r\n    }\r\n    // 从 dataNS 中获取指定值\r\n    // data(element, 'key')\r\n    key = toCamelCase(key);\r\n    // @ts-ignore\r\n    if (element[dataNS] && key in element[dataNS]) {\r\n        // @ts-ignore\r\n        return element[dataNS][key];\r\n    }\r\n    return undefined;\r\n}\r\nexport default data;\r\n","import each from './each';\r\nfunction map(elements, callback) {\r\n    let value;\r\n    const ret = [];\r\n    each(elements, (i, element) => {\r\n        value = callback.call(window, element, i);\r\n        if (value != null) {\r\n            ret.push(value);\r\n        }\r\n    });\r\n    return [].concat(...ret);\r\n}\r\nexport default map;\r\n","import each from '../functions/each';\r\nimport { isUndefined, isString, toCamelCase } from '../utils';\r\nimport dataNS from './utils/data';\r\n/**\r\n * 移除指定元素上存放的数据\r\n * @param element 存放数据的元素\r\n * @param name\r\n * 数据键名\r\n *\r\n * 若未指定键名，将移除元素上所有数据\r\n *\r\n * 多个键名可以用空格分隔，或者用数组表示多个键名\r\n  @example\r\n```js\r\n// 移除元素上键名为 name 的数据\r\nremoveData(document.body, 'name');\r\n```\r\n * @example\r\n```js\r\n// 移除元素上键名为 name1 和 name2 的数据\r\nremoveData(document.body, 'name1 name2');\r\n```\r\n * @example\r\n```js\r\n// 移除元素上键名为 name1 和 name2 的数据\r\nremoveData(document.body, ['name1', 'name2']);\r\n```\r\n * @example\r\n```js\r\n// 移除元素上所有数据\r\nremoveData(document.body);\r\n```\r\n */\r\nfunction removeData(element, name) {\r\n    // @ts-ignore\r\n    if (!element[dataNS]) {\r\n        return;\r\n    }\r\n    const remove = (nameItem) => {\r\n        nameItem = toCamelCase(nameItem);\r\n        // @ts-ignore\r\n        if (element[dataNS][nameItem]) {\r\n            // @ts-ignore\r\n            element[dataNS][nameItem] = null;\r\n            // @ts-ignore\r\n            delete element[dataNS][nameItem];\r\n        }\r\n    };\r\n    if (isUndefined(name)) {\r\n        // @ts-ignore\r\n        element[dataNS] = null;\r\n        // @ts-ignore\r\n        delete element[dataNS];\r\n        // @ts-ignore\r\n    }\r\n    else if (isString(name)) {\r\n        name\r\n            .split(' ')\r\n            .filter((nameItem) => nameItem)\r\n            .forEach((nameItem) => remove(nameItem));\r\n    }\r\n    else {\r\n        each(name, (_, nameItem) => remove(nameItem));\r\n    }\r\n}\r\nexport default removeData;\r\n","import each from './each';\r\n/**\r\n * 过滤掉数组中的重复元素\r\n * @param arr 数组\r\n * @example\r\n```js\r\nunique([1, 2, 12, 3, 2, 1, 2, 1, 1]);\r\n// [1, 2, 12, 3]\r\n```\r\n */\r\nfunction unique(arr) {\r\n    const result = [];\r\n    each(arr, (_, val) => {\r\n        if (result.indexOf(val) === -1) {\r\n            result.push(val);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexport default unique;\r\n","import $ from '../../$';\r\nimport unique from '../../functions/unique';\r\nimport { JQ } from '../../JQ';\r\nimport { isElement } from '../../utils';\r\nimport '../each';\r\nimport '../is';\r\nexport default function dir($elements, nameIndex, node, selector, filter) {\r\n    const ret = [];\r\n    let target;\r\n    $elements.each((_, element) => {\r\n        target = element[node];\r\n        // 不能包含最顶层的 document 元素\r\n        while (target && isElement(target)) {\r\n            // prevUntil, nextUntil, parentsUntil\r\n            if (nameIndex === 2) {\r\n                if (selector && $(target).is(selector)) {\r\n                    break;\r\n                }\r\n                if (!filter || $(target).is(filter)) {\r\n                    ret.push(target);\r\n                }\r\n            }\r\n            // prev, next, parent\r\n            else if (nameIndex === 0) {\r\n                if (!selector || $(target).is(selector)) {\r\n                    ret.push(target);\r\n                }\r\n                break;\r\n            }\r\n            // prevAll, nextAll, parents\r\n            else {\r\n                if (!selector || $(target).is(selector)) {\r\n                    ret.push(target);\r\n                }\r\n            }\r\n            // @ts-ignore\r\n            target = target[node];\r\n        }\r\n    });\r\n    return new JQ(unique(ret));\r\n}\r\n","import $ from '../$';\r\nimport data from '../functions/data';\r\n$.data = data;\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\n$.each = each;\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport extend from '../functions/extend';\r\n$.extend = function (...objectN) {\r\n    if (objectN.length === 1) {\r\n        each(objectN[0], (prop, value) => {\r\n            this[prop] = value;\r\n        });\r\n        return this;\r\n    }\r\n    return extend(objectN.shift(), objectN.shift(), ...objectN);\r\n};\r\n","import $ from '../$';\r\nimport map from '../functions/map';\r\n$.map = map;\r\n","import $ from '../$';\r\nimport merge from '../functions/merge';\r\n$.merge = merge;\r\n","import $ from '../$';\r\nimport param from '../functions/param';\r\n$.param = param;\r\n","import $ from '../$';\r\nimport removeData from '../functions/removeData';\r\n$.removeData = removeData;\r\n","import $ from '../$';\r\nimport unique from '../functions/unique';\r\n$.unique = unique;\r\n","import $ from '../$';\r\nimport merge from '../functions/merge';\r\nimport unique from '../functions/unique';\r\nimport { JQ } from '../JQ';\r\nimport './get';\r\n$.fn.add = function (selector) {\r\n    return new JQ(unique(merge(this.get(), $(selector).get())));\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { isElement, isFunction } from '../utils';\r\nimport './each';\r\neach(['add', 'remove', 'toggle'], (_, name) => {\r\n    $.fn[`${name}Class`] = function (className) {\r\n        if (name === 'remove' && !arguments.length) {\r\n            return this.each((_, element) => {\r\n                element.setAttribute('class', '');\r\n            });\r\n        }\r\n        return this.each((i, element) => {\r\n            if (!isElement(element)) {\r\n                return;\r\n            }\r\n            const classes = (isFunction(className)\r\n                ? className.call(element, i, element.getAttribute('class') || '')\r\n                : className)\r\n                .split(' ')\r\n                .filter((name) => name);\r\n            each(classes, (_, cls) => {\r\n                element.classList[name](cls);\r\n            });\r\n        });\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport './each';\r\neach(['insertBefore', 'insertAfter'], (nameIndex, name) => {\r\n    $.fn[name] = function (target) {\r\n        const $element = nameIndex ? $(this.get().reverse()) : this; // 顺序和 jQuery 保持一致\r\n        const $target = $(target);\r\n        const result = [];\r\n        $target.each((index, target) => {\r\n            if (!target.parentNode) {\r\n                return;\r\n            }\r\n            $element.each((_, element) => {\r\n                const newItem = index\r\n                    ? element.cloneNode(true)\r\n                    : element;\r\n                const existingItem = nameIndex ? target.nextSibling : target;\r\n                result.push(newItem);\r\n                target.parentNode.insertBefore(newItem, existingItem);\r\n            });\r\n        });\r\n        return $(nameIndex ? result.reverse() : result);\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { getChildNodesArray, isFunction, isString, isElement } from '../utils';\r\nimport './each';\r\nimport './insertAfter';\r\nimport './insertBefore';\r\n/**\r\n * 是否不是 HTML 字符串（包裹在 <> 中）\r\n * @param target\r\n */\r\nfunction isPlainText(target) {\r\n    return (isString(target) && (target[0] !== '<' || target[target.length - 1] !== '>'));\r\n}\r\neach(['before', 'after'], (nameIndex, name) => {\r\n    $.fn[name] = function (...args) {\r\n        // after 方法，多个参数需要按参数顺序添加到元素后面，所以需要将参数顺序反向处理\r\n        if (nameIndex === 1) {\r\n            args = args.reverse();\r\n        }\r\n        return this.each((index, element) => {\r\n            const targets = isFunction(args[0])\r\n                ? [args[0].call(element, index, element.innerHTML)]\r\n                : args;\r\n            each(targets, (_, target) => {\r\n                let $target;\r\n                if (isPlainText(target)) {\r\n                    $target = $(getChildNodesArray(target, 'div'));\r\n                }\r\n                else if (index && isElement(target)) {\r\n                    $target = $(target.cloneNode(true));\r\n                }\r\n                else {\r\n                    $target = $(target);\r\n                }\r\n                $target[nameIndex ? 'insertAfter' : 'insertBefore'](element);\r\n            });\r\n        });\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { isFunction, isObjectLike, returnFalse } from '../utils';\r\nimport './each';\r\nimport { remove } from './utils/event';\r\n$.fn.off = function (types, selector, callback) {\r\n    // types 是对象\r\n    if (isObjectLike(types)) {\r\n        each(types, (type, fn) => {\r\n            // this.off('click', undefined, function () {})\r\n            // this.off('click', '.box', function () {})\r\n            this.off(type, selector, fn);\r\n        });\r\n        return this;\r\n    }\r\n    // selector 不存在\r\n    if (selector === false || isFunction(selector)) {\r\n        callback = selector;\r\n        selector = undefined;\r\n        // this.off('click', undefined, function () {})\r\n    }\r\n    // callback 传入 `false`，相当于 `return false`\r\n    if (callback === false) {\r\n        callback = returnFalse;\r\n    }\r\n    return this.each(function () {\r\n        remove(this, types, callback, selector);\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { isObjectLike, isString, returnFalse } from '../utils';\r\nimport './each';\r\nimport './off';\r\nimport { add } from './utils/event';\r\n$.fn.on = function (types, selector, data, callback, one) {\r\n    // types 可以是 type/func 对象\r\n    if (isObjectLike(types)) {\r\n        // (types-Object, selector, data)\r\n        if (!isString(selector)) {\r\n            // (types-Object, data)\r\n            data = data || selector;\r\n            selector = undefined;\r\n        }\r\n        each(types, (type, fn) => {\r\n            // selector 和 data 都可能是 undefined\r\n            // @ts-ignore\r\n            this.on(type, selector, data, fn, one);\r\n        });\r\n        return this;\r\n    }\r\n    if (data == null && callback == null) {\r\n        // (types, fn)\r\n        callback = selector;\r\n        data = selector = undefined;\r\n    }\r\n    else if (callback == null) {\r\n        if (isString(selector)) {\r\n            // (types, selector, fn)\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n        else {\r\n            // (types, data, fn)\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n    }\r\n    if (callback === false) {\r\n        callback = returnFalse;\r\n    }\r\n    else if (!callback) {\r\n        return this;\r\n    }\r\n    // $().one()\r\n    if (one) {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const _this = this;\r\n        const origCallback = callback;\r\n        callback = function (event) {\r\n            _this.off(event.type, selector, callback);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return origCallback.apply(this, arguments);\r\n        };\r\n    }\r\n    return this.each(function () {\r\n        add(this, types, callback, data, selector);\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { ajaxEvents } from '../functions/utils/ajax';\r\nimport './on';\r\neach(ajaxEvents, (name, eventName) => {\r\n    $.fn[name] = function (fn) {\r\n        return this.on(eventName, (e, params) => {\r\n            fn(e, params.xhr, params.options, params.data);\r\n        });\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport map from '../functions/map';\r\nimport { JQ } from '../JQ';\r\n$.fn.map = function (callback) {\r\n    return new JQ(map(this, (element, i) => callback.call(element, i, element)));\r\n};\r\n","import $ from '../$';\r\nimport './map';\r\n$.fn.clone = function () {\r\n    return this.map(function () {\r\n        return this.cloneNode(true);\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport { isDocument, isFunction, isString, isWindow } from '../utils';\r\nimport './each';\r\n$.fn.is = function (selector) {\r\n    let isMatched = false;\r\n    if (isFunction(selector)) {\r\n        this.each((index, element) => {\r\n            if (selector.call(element, index, element)) {\r\n                isMatched = true;\r\n            }\r\n        });\r\n        return isMatched;\r\n    }\r\n    if (isString(selector)) {\r\n        this.each((_, element) => {\r\n            if (isDocument(element) || isWindow(element)) {\r\n                return;\r\n            }\r\n            // @ts-ignore\r\n            const matches = element.matches || element.msMatchesSelector;\r\n            if (matches.call(element, selector)) {\r\n                isMatched = true;\r\n            }\r\n        });\r\n        return isMatched;\r\n    }\r\n    const $compareWith = $(selector);\r\n    this.each((_, element) => {\r\n        $compareWith.each((_, compare) => {\r\n            if (element === compare) {\r\n                isMatched = true;\r\n            }\r\n        });\r\n    });\r\n    return isMatched;\r\n};\r\n","import $ from '../$';\r\nimport './each';\r\nimport './is';\r\n$.fn.remove = function (selector) {\r\n    return this.each((_, element) => {\r\n        if (element.parentNode && (!selector || $(element).is(selector))) {\r\n            element.parentNode.removeChild(element);\r\n        }\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { isFunction, isString } from '../utils';\r\nimport './after';\r\nimport './before';\r\nimport './clone';\r\nimport './each';\r\nimport './map';\r\nimport './remove';\r\neach(['prepend', 'append'], (nameIndex, name) => {\r\n    $.fn[name] = function (...args) {\r\n        return this.each((index, element) => {\r\n            const childNodes = element.childNodes;\r\n            const childLength = childNodes.length;\r\n            const child = childLength\r\n                ? childNodes[nameIndex ? childLength - 1 : 0]\r\n                : document.createElement('div');\r\n            if (!childLength) {\r\n                element.appendChild(child);\r\n            }\r\n            let contents = isFunction(args[0])\r\n                ? [args[0].call(element, index, element.innerHTML)]\r\n                : args;\r\n            // 如果不是字符串，则仅第一个元素使用原始元素，其他的都克隆自第一个元素\r\n            if (index) {\r\n                contents = contents.map((content) => {\r\n                    return isString(content) ? content : $(content).clone();\r\n                });\r\n            }\r\n            $(child)[nameIndex ? 'after' : 'before'](...contents);\r\n            if (!childLength) {\r\n                element.removeChild(child);\r\n            }\r\n        });\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport './insertAfter';\r\nimport './insertBefore';\r\nimport './map';\r\nimport './remove';\r\neach(['appendTo', 'prependTo'], (nameIndex, name) => {\r\n    $.fn[name] = function (target) {\r\n        const extraChilds = [];\r\n        const $target = $(target).map((_, element) => {\r\n            const childNodes = element.childNodes;\r\n            const childLength = childNodes.length;\r\n            if (childLength) {\r\n                return childNodes[nameIndex ? 0 : childLength - 1];\r\n            }\r\n            const child = document.createElement('div');\r\n            element.appendChild(child);\r\n            extraChilds.push(child);\r\n            return child;\r\n        });\r\n        const $result = this[nameIndex ? 'insertBefore' : 'insertAfter']($target);\r\n        $(extraChilds).remove();\r\n        return $result;\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { cssNumber, getStyle, isElement, isFunction, isNull, isNumber, isObjectLike, isUndefined, toCamelCase, } from '../utils';\r\nimport './each';\r\neach(['attr', 'prop', 'css'], (nameIndex, name) => {\r\n    function set(element, key, value) {\r\n        // 值为 undefined 时，不修改\r\n        if (isUndefined(value)) {\r\n            return;\r\n        }\r\n        switch (nameIndex) {\r\n            // attr\r\n            case 0:\r\n                if (isNull(value)) {\r\n                    element.removeAttribute(key);\r\n                }\r\n                else {\r\n                    element.setAttribute(key, value);\r\n                }\r\n                break;\r\n            // prop\r\n            case 1:\r\n                // @ts-ignore\r\n                element[key] = value;\r\n                break;\r\n            // css\r\n            default:\r\n                key = toCamelCase(key);\r\n                // @ts-ignore\r\n                element.style[key] = isNumber(value)\r\n                    ? `${value}${cssNumber.indexOf(key) > -1 ? '' : 'px'}`\r\n                    : value;\r\n                break;\r\n        }\r\n    }\r\n    function get(element, key) {\r\n        switch (nameIndex) {\r\n            // attr\r\n            case 0:\r\n                // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致\r\n                const value = element.getAttribute(key);\r\n                return isNull(value) ? undefined : value;\r\n            // prop\r\n            case 1:\r\n                // @ts-ignore\r\n                return element[key];\r\n            // css\r\n            default:\r\n                return getStyle(element, key);\r\n        }\r\n    }\r\n    $.fn[name] = function (key, value) {\r\n        if (isObjectLike(key)) {\r\n            each(key, (k, v) => {\r\n                // @ts-ignore\r\n                this[name](k, v);\r\n            });\r\n            return this;\r\n        }\r\n        if (arguments.length === 1) {\r\n            const element = this[0];\r\n            return isElement(element) ? get(element, key) : undefined;\r\n        }\r\n        return this.each((i, element) => {\r\n            set(element, key, isFunction(value) ? value.call(element, i, get(element, key)) : value);\r\n        });\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport unique from '../functions/unique';\r\nimport { JQ } from '../JQ';\r\nimport { isElement } from '../utils';\r\nimport './each';\r\nimport './is';\r\n$.fn.children = function (selector) {\r\n    const children = [];\r\n    this.each((_, element) => {\r\n        each(element.childNodes, (__, childNode) => {\r\n            if (!isElement(childNode)) {\r\n                return;\r\n            }\r\n            if (!selector || $(childNode).is(selector)) {\r\n                children.push(childNode);\r\n            }\r\n        });\r\n    });\r\n    return new JQ(unique(children));\r\n};\r\n","import $ from '../$';\r\nimport { JQ } from '../JQ';\r\n$.fn.slice = function (...args) {\r\n    return new JQ([].slice.apply(this, args));\r\n};\r\n","import $ from '../$';\r\nimport { JQ } from '../JQ';\r\nimport './slice';\r\n$.fn.eq = function (index) {\r\n    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\r\n    return new JQ(ret);\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport './get';\r\nimport dir from './utils/dir';\r\neach(['', 's', 'sUntil'], (nameIndex, name) => {\r\n    $.fn[`parent${name}`] = function (selector, filter) {\r\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\r\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\r\n        return dir($nodes, nameIndex, 'parentNode', selector, filter);\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport { JQ } from '../JQ';\r\nimport './eq';\r\nimport './is';\r\nimport './parents';\r\n$.fn.closest = function (selector) {\r\n    if (this.is(selector)) {\r\n        return this;\r\n    }\r\n    const matched = [];\r\n    this.parents().each((_, element) => {\r\n        if ($(element).is(selector)) {\r\n            matched.push(element);\r\n            return false;\r\n        }\r\n    });\r\n    return new JQ(matched);\r\n};\r\n","import $ from '../$';\r\nimport data from '../functions/data';\r\nimport { isObjectLike, isString, isUndefined, toCamelCase, toKebabCase, } from '../utils';\r\nimport './each';\r\nconst rbrace = /^(?:{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\r\n// 从 `data-*` 中获取的值，需要经过该函数转换\r\nfunction getData(value) {\r\n    if (value === 'true') {\r\n        return true;\r\n    }\r\n    if (value === 'false') {\r\n        return false;\r\n    }\r\n    if (value === 'null') {\r\n        return null;\r\n    }\r\n    if (value === +value + '') {\r\n        return +value;\r\n    }\r\n    if (rbrace.test(value)) {\r\n        return JSON.parse(value);\r\n    }\r\n    return value;\r\n}\r\n// 若 value 不存在，则从 `data-*` 中获取值\r\nfunction dataAttr(element, key, value) {\r\n    if (isUndefined(value) && element.nodeType === 1) {\r\n        const name = 'data-' + toKebabCase(key);\r\n        value = element.getAttribute(name);\r\n        if (isString(value)) {\r\n            try {\r\n                value = getData(value);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        else {\r\n            value = undefined;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n$.fn.data = function (key, value) {\r\n    // 获取所有值\r\n    if (isUndefined(key)) {\r\n        if (!this.length) {\r\n            return undefined;\r\n        }\r\n        const element = this[0];\r\n        const resultData = data(element);\r\n        // window, document 上不存在 `data-*` 属性\r\n        if (element.nodeType !== 1) {\r\n            return resultData;\r\n        }\r\n        // 从 `data-*` 中获取值\r\n        const attrs = element.attributes;\r\n        let i = attrs.length;\r\n        while (i--) {\r\n            if (attrs[i]) {\r\n                let name = attrs[i].name;\r\n                if (name.indexOf('data-') === 0) {\r\n                    name = toCamelCase(name.slice(5));\r\n                    resultData[name] = dataAttr(element, name, resultData[name]);\r\n                }\r\n            }\r\n        }\r\n        return resultData;\r\n    }\r\n    // 同时设置多个值\r\n    if (isObjectLike(key)) {\r\n        return this.each(function () {\r\n            data(this, key);\r\n        });\r\n    }\r\n    // value 传入了 undefined\r\n    if (arguments.length === 2 && isUndefined(value)) {\r\n        return this;\r\n    }\r\n    // 设置值\r\n    if (!isUndefined(value)) {\r\n        return this.each(function () {\r\n            data(this, key, value);\r\n        });\r\n    }\r\n    // 获取值\r\n    if (!this.length) {\r\n        return undefined;\r\n    }\r\n    return dataAttr(this[0], key, data(this[0], key));\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport { isBoolean, isDocument, isFunction, isWindow, toElement, isBorderBox, getExtraWidth, getComputedStyleValue, isIE, } from '../utils';\r\nimport './css';\r\nimport './each';\r\n/**\r\n * 值上面的 padding、border、margin 处理\r\n * @param element\r\n * @param name\r\n * @param value\r\n * @param funcIndex\r\n * @param includeMargin\r\n * @param multiply\r\n */\r\nfunction handleExtraWidth(element, name, value, funcIndex, includeMargin, multiply) {\r\n    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）\r\n    const getExtraWidthValue = (extra) => {\r\n        return (getExtraWidth(element, name.toLowerCase(), extra) *\r\n            multiply);\r\n    };\r\n    if (funcIndex === 2 && includeMargin) {\r\n        value += getExtraWidthValue('margin');\r\n    }\r\n    if (isBorderBox(element)) {\r\n        // IE 为 box-sizing: border-box 时，得到的值不含 border 和 padding，这里先修复\r\n        // 仅获取时需要处理，multiply === 1 为 get\r\n        if (isIE() && multiply === 1) {\r\n            value += getExtraWidthValue('border');\r\n            value += getExtraWidthValue('padding');\r\n        }\r\n        if (funcIndex === 0) {\r\n            value -= getExtraWidthValue('border');\r\n        }\r\n        if (funcIndex === 1) {\r\n            value -= getExtraWidthValue('border');\r\n            value -= getExtraWidthValue('padding');\r\n        }\r\n    }\r\n    else {\r\n        if (funcIndex === 0) {\r\n            value += getExtraWidthValue('padding');\r\n        }\r\n        if (funcIndex === 2) {\r\n            value += getExtraWidthValue('border');\r\n            value += getExtraWidthValue('padding');\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * 获取元素的样式值\r\n * @param element\r\n * @param name\r\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\r\n * @param includeMargin\r\n */\r\nfunction get(element, name, funcIndex, includeMargin) {\r\n    const clientProp = `client${name}`;\r\n    const scrollProp = `scroll${name}`;\r\n    const offsetProp = `offset${name}`;\r\n    const innerProp = `inner${name}`;\r\n    // $(window).width()\r\n    if (isWindow(element)) {\r\n        // outerWidth, outerHeight 需要包含滚动条的宽度\r\n        return funcIndex === 2\r\n            ? element[innerProp]\r\n            : toElement(document)[clientProp];\r\n    }\r\n    // $(document).width()\r\n    if (isDocument(element)) {\r\n        const doc = toElement(element);\r\n        return Math.max(\r\n        // @ts-ignore\r\n        element.body[scrollProp], doc[scrollProp], \r\n        // @ts-ignore\r\n        element.body[offsetProp], doc[offsetProp], doc[clientProp]);\r\n    }\r\n    const value = parseFloat(getComputedStyleValue(element, name.toLowerCase()) || '0');\r\n    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);\r\n}\r\n/**\r\n * 设置元素的样式值\r\n * @param element\r\n * @param elementIndex\r\n * @param name\r\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\r\n * @param includeMargin\r\n * @param value\r\n */\r\nfunction set(element, elementIndex, name, funcIndex, includeMargin, value) {\r\n    let computedValue = isFunction(value)\r\n        ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin))\r\n        : value;\r\n    if (computedValue == null) {\r\n        return;\r\n    }\r\n    const $element = $(element);\r\n    const dimension = name.toLowerCase();\r\n    // 特殊的值，不需要计算 padding、border、margin\r\n    if (['auto', 'inherit', ''].indexOf(computedValue) > -1) {\r\n        $element.css(dimension, computedValue);\r\n        return;\r\n    }\r\n    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的\r\n    const suffix = computedValue.toString().replace(/\\b[0-9.]*/, '');\r\n    const numerical = parseFloat(computedValue);\r\n    computedValue =\r\n        handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) +\r\n            (suffix || 'px');\r\n    $element.css(dimension, computedValue);\r\n}\r\neach(['Width', 'Height'], (_, name) => {\r\n    each([`inner${name}`, name.toLowerCase(), `outer${name}`], (funcIndex, funcName) => {\r\n        $.fn[funcName] = function (margin, value) {\r\n            // 是否是赋值操作\r\n            const isSet = arguments.length && (funcIndex < 2 || !isBoolean(margin));\r\n            const includeMargin = margin === true || value === true;\r\n            // 获取第一个元素的值\r\n            if (!isSet) {\r\n                return this.length\r\n                    ? get(this[0], name, funcIndex, includeMargin)\r\n                    : undefined;\r\n            }\r\n            // 设置每个元素的值\r\n            return this.each((index, element) => set(element, index, name, funcIndex, includeMargin, margin));\r\n        };\r\n    });\r\n});\r\n","import $ from '../$';\r\nimport './css';\r\nimport './eq';\r\nimport './offset';\r\nimport './offsetParent';\r\nfunction floatStyle($element, name) {\r\n    return parseFloat($element.css(name));\r\n}\r\n$.fn.position = function () {\r\n    if (!this.length) {\r\n        return undefined;\r\n    }\r\n    const $element = this.eq(0);\r\n    let currentOffset;\r\n    let parentOffset = {\r\n        left: 0,\r\n        top: 0,\r\n    };\r\n    if ($element.css('position') === 'fixed') {\r\n        currentOffset = $element[0].getBoundingClientRect();\r\n    }\r\n    else {\r\n        currentOffset = $element.offset();\r\n        const $offsetParent = $element.offsetParent();\r\n        parentOffset = $offsetParent.offset();\r\n        parentOffset.top += floatStyle($offsetParent, 'border-top-width');\r\n        parentOffset.left += floatStyle($offsetParent, 'border-left-width');\r\n    }\r\n    return {\r\n        top: currentOffset.top - parentOffset.top - floatStyle($element, 'margin-top'),\r\n        left: currentOffset.left -\r\n            parentOffset.left -\r\n            floatStyle($element, 'margin-left'),\r\n    };\r\n};\r\n","import $ from '../$';\r\nimport extend from '../functions/extend';\r\nimport { isFunction } from '../utils';\r\nimport './css';\r\nimport './each';\r\nimport './position';\r\nfunction get(element) {\r\n    if (!element.getClientRects().length) {\r\n        return { top: 0, left: 0 };\r\n    }\r\n    const rect = element.getBoundingClientRect();\r\n    const win = element.ownerDocument.defaultView;\r\n    return {\r\n        top: rect.top + win.pageYOffset,\r\n        left: rect.left + win.pageXOffset,\r\n    };\r\n}\r\nfunction set(element, value, index) {\r\n    const $element = $(element);\r\n    const position = $element.css('position');\r\n    if (position === 'static') {\r\n        $element.css('position', 'relative');\r\n    }\r\n    const currentOffset = get(element);\r\n    const currentTopString = $element.css('top');\r\n    const currentLeftString = $element.css('left');\r\n    let currentTop;\r\n    let currentLeft;\r\n    const calculatePosition = (position === 'absolute' || position === 'fixed') &&\r\n        (currentTopString + currentLeftString).indexOf('auto') > -1;\r\n    if (calculatePosition) {\r\n        const currentPosition = $element.position();\r\n        currentTop = currentPosition.top;\r\n        currentLeft = currentPosition.left;\r\n    }\r\n    else {\r\n        currentTop = parseFloat(currentTopString);\r\n        currentLeft = parseFloat(currentLeftString);\r\n    }\r\n    const computedValue = isFunction(value)\r\n        ? value.call(element, index, extend({}, currentOffset))\r\n        : value;\r\n    $element.css({\r\n        top: computedValue.top != null\r\n            ? computedValue.top - currentOffset.top + currentTop\r\n            : undefined,\r\n        left: computedValue.left != null\r\n            ? computedValue.left - currentOffset.left + currentLeft\r\n            : undefined,\r\n    });\r\n}\r\n$.fn.offset = function (value) {\r\n    // 获取坐标\r\n    if (!arguments.length) {\r\n        if (!this.length) {\r\n            return undefined;\r\n        }\r\n        return get(this[0]);\r\n    }\r\n    // 设置坐标\r\n    return this.each(function (index) {\r\n        set(this, value, index);\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport './each';\r\n$.fn.empty = function () {\r\n    return this.each(function () {\r\n        this.innerHTML = '';\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\n$.fn.extend = function (obj) {\r\n    each(obj, (prop, value) => {\r\n        // 在 JQ 对象上扩展方法时，需要自己添加 typescript 的类型定义\r\n        $.fn[prop] = value;\r\n    });\r\n    return this;\r\n};\r\n","import $ from '../$';\r\nimport { isFunction, isString } from '../utils';\r\nimport './is';\r\nimport './map';\r\n$.fn.filter = function (selector) {\r\n    if (isFunction(selector)) {\r\n        return this.map((index, element) => selector.call(element, index, element) ? element : undefined);\r\n    }\r\n    if (isString(selector)) {\r\n        return this.map((_, element) => $(element).is(selector) ? element : undefined);\r\n    }\r\n    const $selector = $(selector);\r\n    return this.map((_, element) => $selector.get().indexOf(element) > -1 ? element : undefined);\r\n};\r\n","import $ from '../$';\r\nimport './eq';\r\n$.fn.first = function () {\r\n    return this.eq(0);\r\n};\r\n","import $ from '../$';\r\nimport contains from '../functions/contains';\r\nimport { isString } from '../utils';\r\nimport './find';\r\n$.fn.has = function (selector) {\r\n    const $targets = isString(selector) ? this.find(selector) : $(selector);\r\n    const { length } = $targets;\r\n    return this.map(function () {\r\n        for (let i = 0; i < length; i += 1) {\r\n            if (contains(this, $targets[i])) {\r\n                return this;\r\n            }\r\n        }\r\n        return;\r\n    });\r\n};\r\n","import $ from '../$';\r\n$.fn.hasClass = function (className) {\r\n    return this[0].classList.contains(className);\r\n};\r\n","import $ from '../$';\r\nimport './each';\r\n$.fn.hide = function () {\r\n    return this.each(function () {\r\n        this.style.display = 'none';\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport map from '../functions/map';\r\nimport { isElement, isFunction, isUndefined, toElement } from '../utils';\r\nimport './each';\r\nimport './is';\r\neach(['val', 'html', 'text'], (nameIndex, name) => {\r\n    const props = {\r\n        0: 'value',\r\n        1: 'innerHTML',\r\n        2: 'textContent',\r\n    };\r\n    const propName = props[nameIndex];\r\n    function get($elements) {\r\n        // text() 获取所有元素的文本\r\n        if (nameIndex === 2) {\r\n            // @ts-ignore\r\n            return map($elements, (element) => toElement(element)[propName]).join('');\r\n        }\r\n        // 空集合时，val() 和 html() 返回 undefined\r\n        if (!$elements.length) {\r\n            return undefined;\r\n        }\r\n        // val() 和 html() 仅获取第一个元素的内容\r\n        const firstElement = $elements[0];\r\n        // select multiple 返回数组\r\n        if (nameIndex === 0 && $(firstElement).is('select[multiple]')) {\r\n            return map($(firstElement).find('option:checked'), (element) => element.value);\r\n        }\r\n        // @ts-ignore\r\n        return firstElement[propName];\r\n    }\r\n    function set(element, value) {\r\n        // text() 和 html() 赋值为 undefined，则保持原内容不变\r\n        // val() 赋值为 undefined 则赋值为空\r\n        if (isUndefined(value)) {\r\n            if (nameIndex !== 0) {\r\n                return;\r\n            }\r\n            value = '';\r\n        }\r\n        if (nameIndex === 1 && isElement(value)) {\r\n            value = value.outerHTML;\r\n        }\r\n        // @ts-ignore\r\n        element[propName] = value;\r\n    }\r\n    $.fn[name] = function (value) {\r\n        // 获取值\r\n        if (!arguments.length) {\r\n            return get(this);\r\n        }\r\n        // 设置值\r\n        return this.each((i, element) => {\r\n            const computedValue = isFunction(value)\r\n                ? value.call(element, i, get($(element)))\r\n                : value;\r\n            // value 是数组，则选中数组中的元素，反选不在数组中的元素\r\n            if (nameIndex === 0 && Array.isArray(computedValue)) {\r\n                // select[multiple]\r\n                if ($(element).is('select[multiple]')) {\r\n                    map($(element).find('option'), (option) => (option.selected =\r\n                        computedValue.indexOf(option.value) >\r\n                            -1));\r\n                }\r\n                // 其他 checkbox, radio 等元素\r\n                else {\r\n                    element.checked =\r\n                        computedValue.indexOf(element.value) > -1;\r\n                }\r\n            }\r\n            else {\r\n                set(element, computedValue);\r\n            }\r\n        });\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport { isString } from '../utils';\r\nimport './children';\r\nimport './eq';\r\nimport './get';\r\nimport './parent';\r\n$.fn.index = function (selector) {\r\n    if (!arguments.length) {\r\n        return this.eq(0).parent().children().get().indexOf(this[0]);\r\n    }\r\n    if (isString(selector)) {\r\n        return $(selector).get().indexOf(this[0]);\r\n    }\r\n    return this.get().indexOf($(selector)[0]);\r\n};\r\n","import $ from '../$';\r\nimport './eq';\r\n$.fn.last = function () {\r\n    return this.eq(-1);\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport dir from './utils/dir';\r\neach(['', 'All', 'Until'], (nameIndex, name) => {\r\n    $.fn[`next${name}`] = function (selector, filter) {\r\n        return dir(this, nameIndex, 'nextElementSibling', selector, filter);\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport './filter';\r\nimport './map';\r\n$.fn.not = function (selector) {\r\n    const $excludes = this.filter(selector);\r\n    return this.map((_, element) => $excludes.index(element) > -1 ? undefined : element);\r\n};\r\n","import $ from '../$';\r\nimport './css';\r\nimport './map';\r\n/**\r\n * 返回最近的用于定位的父元素\r\n */\r\n$.fn.offsetParent = function () {\r\n    return this.map(function () {\r\n        let offsetParent = this.offsetParent;\r\n        while (offsetParent && $(offsetParent).css('position') === 'static') {\r\n            offsetParent = offsetParent.offsetParent;\r\n        }\r\n        return offsetParent || document.documentElement;\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport './on';\r\n$.fn.one = function (types, selector, data, callback) {\r\n    // @ts-ignore\r\n    return this.on(types, selector, data, callback, true);\r\n};\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport './get';\r\nimport dir from './utils/dir';\r\neach(['', 'All', 'Until'], (nameIndex, name) => {\r\n    $.fn[`prev${name}`] = function (selector, filter) {\r\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\r\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\r\n        return dir($nodes, nameIndex, 'previousElementSibling', selector, filter);\r\n    };\r\n});\r\n","import $ from '../$';\r\nimport each from '../functions/each';\r\nimport './each';\r\n$.fn.removeAttr = function (attributeName) {\r\n    const names = attributeName.split(' ').filter((name) => name);\r\n    return this.each(function () {\r\n        each(names, (_, name) => {\r\n            this.removeAttribute(name);\r\n        });\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport removeData from '../functions/removeData';\r\nimport './each';\r\n$.fn.removeData = function (name) {\r\n    return this.each(function () {\r\n        removeData(this, name);\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport './each';\r\n$.fn.removeProp = function (name) {\r\n    return this.each(function () {\r\n        try {\r\n            // @ts-ignore\r\n            delete this[name];\r\n        }\r\n        catch (e) { }\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport './before';\r\nimport './clone';\r\nimport './each';\r\nimport './remove';\r\nimport { isFunction, isString } from '../utils';\r\n$.fn.replaceWith = function (newContent) {\r\n    this.each((index, element) => {\r\n        let content = newContent;\r\n        if (isFunction(content)) {\r\n            content = content.call(element, index, element.innerHTML);\r\n        }\r\n        else if (index && !isString(content)) {\r\n            content = $(content).clone();\r\n        }\r\n        $(element).before(content);\r\n    });\r\n    return this.remove();\r\n};\r\n","import $ from '../$';\r\nimport './clone';\r\nimport './get';\r\nimport './map';\r\nimport './replaceWith';\r\n$.fn.replaceAll = function (target) {\r\n    return $(target).map((index, element) => {\r\n        $(element).replaceWith(index ? this.clone() : this);\r\n        return this.get();\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport './each';\r\nimport './val';\r\n/**\r\n * 将表单元素的值组合成键值对数组\r\n * @returns {Array}\r\n */\r\n$.fn.serializeArray = function () {\r\n    const result = [];\r\n    this.each((_, element) => {\r\n        const elements = element instanceof HTMLFormElement ? element.elements : [element];\r\n        $(elements).each((_, element) => {\r\n            const $element = $(element);\r\n            const type = element.type;\r\n            const nodeName = element.nodeName.toLowerCase();\r\n            if (nodeName !== 'fieldset' &&\r\n                element.name &&\r\n                !element.disabled &&\r\n                ['input', 'select', 'textarea', 'keygen'].indexOf(nodeName) > -1 &&\r\n                ['submit', 'button', 'image', 'reset', 'file'].indexOf(type) === -1 &&\r\n                (['radio', 'checkbox'].indexOf(type) === -1 ||\r\n                    element.checked)) {\r\n                const value = $element.val();\r\n                const valueArr = Array.isArray(value) ? value : [value];\r\n                valueArr.forEach((value) => {\r\n                    result.push({\r\n                        name: element.name,\r\n                        value,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    });\r\n    return result;\r\n};\r\n","import $ from '../$';\r\nimport param from '../functions/param';\r\nimport './serializeArray';\r\n$.fn.serialize = function () {\r\n    return param(this.serializeArray());\r\n};\r\n","import $ from '../$';\r\nimport { getStyle } from '../utils';\r\nimport './each';\r\nconst elementDisplay = {};\r\n/**\r\n * 获取元素的初始 display 值，用于 .show() 方法\r\n * @param nodeName\r\n */\r\nfunction defaultDisplay(nodeName) {\r\n    let element;\r\n    let display;\r\n    if (!elementDisplay[nodeName]) {\r\n        element = document.createElement(nodeName);\r\n        document.body.appendChild(element);\r\n        display = getStyle(element, 'display');\r\n        element.parentNode.removeChild(element);\r\n        if (display === 'none') {\r\n            display = 'block';\r\n        }\r\n        elementDisplay[nodeName] = display;\r\n    }\r\n    return elementDisplay[nodeName];\r\n}\r\n/**\r\n * 显示指定元素\r\n * @returns {JQ}\r\n */\r\n$.fn.show = function () {\r\n    return this.each(function () {\r\n        if (this.style.display === 'none') {\r\n            this.style.display = '';\r\n        }\r\n        if (getStyle(this, 'display') === 'none') {\r\n            this.style.display = defaultDisplay(this.nodeName);\r\n        }\r\n    });\r\n};\r\n","import $ from '../$';\r\nimport './add';\r\nimport './nextAll';\r\nimport './prevAll';\r\n/**\r\n * 取得同辈元素的集合\r\n * @param selector {String=}\r\n * @returns {JQ}\r\n */\r\n$.fn.siblings = function (selector) {\r\n    return this.prevAll(selector).add(this.nextAll(selector));\r\n};\r\n","import $ from '../$';\r\nimport { getStyle } from '../utils';\r\nimport './each';\r\nimport './hide';\r\nimport './show';\r\n/**\r\n * 切换元素的显示状态\r\n */\r\n$.fn.toggle = function () {\r\n    return this.each(function () {\r\n        getStyle(this, 'display') === 'none' ? $(this).show() : $(this).hide();\r\n    });\r\n};\r\n"],"names":["isFunction","target","isString","isNumber","isBoolean","isUndefined","isNull","isWindow","Window","isDocument","Document","isElement","Element","isArrayLike","length","isObjectLike","toElement","documentElement","toCamelCase","string","replace","_","letter","toUpperCase","toKebabCase","replacer","toLowerCase","getComputedStyleValue","element","name","window","getComputedStyle","getPropertyValue","isBorderBox","getExtraWidth","direction","extra","position","reduce","prev","index","prop","parseFloat","getStyle","valueNumber","getBoundingClientRect","getChildNodesArray","parent","tempParent","document","createElement","innerHTML","slice","call","childNodes","returnFalse","cssNumber","each","callback","i","keys","Object","JQ","[object Object]","arr","this","item","$","selector","test","readyState","body","addEventListener","html","trim","toCreate","li","tr","td","th","tbody","option","childTag","parentTag","indexOf","match","querySelectorAll","getElementById","Node","fn","prototype","get$","contains","container","merge","first","second","value","push","get","undefined","find","foundElements","handlers","mduiElementId","getElementId","key","parse","type","parts","split","ns","sort","join","matcherFor","RegExp","remove","types","func","handlersInElement","removeEvent","handler","id","removeEventListener","proxy","forEach","event","filter","getHandlers","extend","object1","objectN","unshift","object","param","obj","Array","isArray","args","destructure","keyTmp","v","encodeURIComponent","trigger","extraParameters","eventObject","eventParams","bubbles","cancelable","MouseEvent","detail","CustomEvent","_detail","_ns","dispatchEvent","globalOptions","ajaxEvents","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","isQueryStringData","method","appendQuery","url","query","ajax","options","isCanceled","mergedOptions","defaults","data","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","contentType","timeout","global","mergeOptions","location","toString","params","result1","result2","ArrayBuffer","Blob","FormData","textStatus","Promise","resolve","reject","Date","now","xhr","XMLHttpRequest","open","setRequestHeader","xhrTimeout","$2","host","onload","clearTimeout","isHttpStatusSuccess","status","responseData","JSON","responseText","err","Error","responseType","response","onerror","statusText","onabort","setTimeout","abort","send","XHR","ajaxSetup","dataNS","setObjectToElement","map","elements","ret","concat","removeData","nameItem","unique","result","val","dir","$elements","nameIndex","node","is","shift","add","className","arguments","getAttribute","cls","classList","setAttribute","$element","reverse","$target","parentNode","newItem","cloneNode","existingItem","nextSibling","insertBefore","isPlainText","off","on","one","_this","origCallback","apply","elementId","useCapture","callFn","e","elem","preventDefault","stopPropagation","proxyFn","_data","eventName","clone","isMatched","matches","msMatchesSelector","$compareWith","compare","removeChild","childLength","child","appendChild","contents","content","extraChilds","$result","set","removeAttribute","style","k","children","__","childNode","eq","closest","matched","parents","rbrace","dataAttr","nodeType","getData","handleExtraWidth","funcIndex","includeMargin","multiply","getExtraWidthValue","documentMode","clientProp","scrollProp","offsetProp","innerProp","doc","Math","max","elementIndex","computedValue","dimension","css","suffix","floatStyle","getClientRects","top","left","rect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","currentOffset","currentTopString","currentLeftString","currentTop","currentLeft","currentPosition","resultData","attrs","attributes","empty","$selector","has","$targets","hasClass","funcName","margin","isSet","hide","display","propName","0","1","2","firstElement","outerHTML","selected","checked","last","not","$excludes","offsetParent","parentOffset","offset","$offsetParent","removeAttr","attributeName","names","removeProp","replaceWith","newContent","before","replaceAll","serializeArray","HTMLFormElement","nodeName","disabled","serialize","elementDisplay","show","defaultDisplay","siblings","prevAll","nextAll","toggle"],"mappings":"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"}